UTILISATION DES MACROS LIBRAIRIE <stdarg.h>

va_start:

Usage: va_start(va_list ap, last_fixed_argument).
va_start initialise ap pour récupérer les arguments supplémentaires après last_fixed_argument.
last_fixed_argument est le dernier argument connu (c'est-à-dire l'argument fixe juste avant les points de suspension).

va_arg:

Usage: type va_arg(va_list ap, type).
Après avoir initialisé ap avec va_start, vous pouvez utiliser va_arg pour récupérer les arguments supplémentaires un par un.
Chaque appel à va_arg renvoie l'argument suivant de type type et avance ap pour pointer vers l'argument suivant.
Vous devez connaître le type de l'argument suivant lorsque vous utilisez va_arg.

va_copy:

Usage: va_copy(va_list dest, va_list src).
Si vous avez besoin de conserver ou de réinitialiser l'état de la liste d'arguments, vous pouvez utiliser va_copy pour copier le contenu de src vers dest.
Après la copie, dest peut être utilisé comme une liste d'arguments indépendante et doit être nettoyé avec va_end.

va_end:

Usage: va_end(va_list ap).
Il est important de nettoyer après avoir traité les arguments. va_end sert à cela.
Tout va_list initialisé avec va_start ou va_copy doit être nettoyé avec va_end avant la fin de la fonction.

COMMENT INCLURE LA LIBFT DANS PRINTF?

Il faut apparemment lier le projet a la librairie a l'aide de flags.

CC = gcc
CFLAGS = -Ipath_to_library/include
LDFLAGS = -Lpath_to_library/lib -lutils

all: my_program

my_program: main.o
    $(CC) -o $@ $^ $(LDFLAGS)

main.o: main.c
    $(CC) $(CFLAGS) -c $<
